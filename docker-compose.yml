services:
  api:
    container_name: api-container
    build:
      context: .
      dockerfile: ./docker/Dockerfile.dev
    ports:
      - "${API_PORT}:${API_PORT}"
    volumes:
      - ./cmd:/app/cmd
      - ./internal:/app/internal
      - ./pkg:/app/pkg
      - .air.toml:/app/.air.toml
    tty: true
    stdin_open: true
    environment:
      API_PORT: ${API_PORT}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql-container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:
